@inherits CommonPageBase
@page "/examples/search"
@layout ExampleLayout
<h1>@Title</h1>
<p>The grid component has a <code>QueryUserInput</code> parameter which can be set to any value. The property has a builtin 350 ms debounce, so even if you bind it to a text input with the <code>oninput</code> event, it will not flood the provider with unnecessary requests.</p>
<p>After the debounce, the value will be applied to the <code>Query</code> parameter which will trigger a provider call including the value of the search query. If you do not wish to use the debounce or if you prefer to have your own debounce logic, you can also use the <code>Query</code> parameter directly.</p>

<Caution>Keep in mind that it is the responsibility of the provider / your server-side code to use the search query and return a filtered result set.</Caution>

<div class="my-3">
    <h6>Type something into the text box to try the filter</h6>
    <input type="search"
           class="form-control form-control-lg"
           placeholder="Filter"
           @bind-value="FilterInput"
           @bind-value:event="oninput" />
</div>

<Tabs>
    <Tab Caption="Result" class="p-3 overflow-auto">
        <BlazorGrid QueryUserInput="@FilterInput" TRow="Employee" SourceUrl="data/employees.json" style="max-height: 340px;">
            <StaticGridCol FitToContent="true">
                <img src="@context.Avatar" style="width: 20px; height: 20px;" />
            </StaticGridCol>
            <GridCol For="() => context.Id" FitToContent="true" />
            <GridCol For="() => context.FirstName" />
            <GridCol For="() => context.LastName" />
            <GridCol For="() => context.Email">
                <a href="mailto:@context.Email">@context.Email</a>
            </GridCol>
        </BlazorGrid>
    </Tab>
    <Tab Caption="Code" class="p-3">
        <h6>Razor</h6>
        <pre class="pre-scrollable"><code>&lt;input type=&quot;text&quot; class=&quot;form-input input-lg&quot; placeholder=&quot;Filter&quot;
        @@bind-value=&quot;FilterInput&quot; @@bind-value:event=&quot;oninput&quot; /&gt;

&lt;BlazorGrid QueryUserInput="@@FilterInput" TRow=&quot;Employee&quot; SourceUrl=&quot;data/employees.json&quot;&gt;
    &lt;StaticGridCol FitToContent=&quot;true&quot;&gt;
        &lt;img src=&quot;@@context.Avatar&quot; style=&quot;width: 20px; height: 20px;&quot; /&gt;
    &lt;/StaticGridCol&gt;
    &lt;GridCol For=&quot;() => context.Id&quot; FitToContent=&quot;true&quot; /&gt;
    &lt;GridCol For=&quot;() => context.FirstName&quot; /&gt;
    &lt;GridCol For=&quot;() => context.LastName&quot; /&gt;
    &lt;GridCol For=&quot;() => context.Email&quot;&gt;
        &lt;a href=&quot;mailto:@@context.Email&quot;&gt;@@context.Email&lt;/a&gt;
    &lt;/GridCol&gt;
&lt;/BlazorGrid&gt;

@@code
{
    public string FilterInput { get; set; }
}</code></pre>
    </Tab>
</Tabs>

@code
{
    protected override string Title => "Search";

    public string FilterInput { get; set; }
}