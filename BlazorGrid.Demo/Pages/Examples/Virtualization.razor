@inherits CommonPageBase
@page "/examples/virtualization"
@implements IDisposable
@layout ExampleLayout
<h1>@Title</h1>
<p>Since .NET 5, BlazorGrid uses virtualization by default for best performance.</p>
<p>In this demo, you can use the slider control below to set an artificial loading delay to the grid provider so you can see the item loading animation when scrolling down.</p>
<div class="form-group row">
    <label class="col-form-label col-md-4 col-lg-3 col-xl-2">Delay by @CurrentDelay ms</label>
    <div class="col-md-8 col-lg-9 col-xl-10">
        <input type="range" step="100" min="0" max="10000"
               value="@CurrentDelay"
               @onchange="OnDelayChanged" />
    </div>
</div>
<Tabs>
    <Tab Caption="Result" class="p-3">
        <BlazorGrid TRow="Employee" SourceUrl="data/employees.json" style="max-height: 340px;">
            <StaticGridCol FitToContent="true">
                <img src="@context.Avatar" style="width: 20px; height: 20px;" />
            </StaticGridCol>
            <GridCol For="() => context.Id" FitToContent="true" />
            <GridCol For="() => context.FirstName" />
            <GridCol For="() => context.LastName" />
            <GridCol For="() => context.Email">
                <a href="mailto:@context.Email">@context.Email</a>
            </GridCol>
        </BlazorGrid>
    </Tab>
</Tabs>
@code
{
    protected override string Title => "Virtualization";

    private int CurrentDelay = 2000;

    private void OnDelayChanged(ChangeEventArgs args)
    {
        if (int.TryParse(args.Value?.ToString(), out var delay))
        {
            CurrentDelay = Providers.CustomProvider.ArtificialDelayMs = delay;
        }
    }

    protected override void OnInitialized()
    {
        Providers.CustomProvider.ArtificialDelayMs = CurrentDelay;
    }

    public void Dispose()
    {
        Providers.CustomProvider.ArtificialDelayMs = 0;
    }
}