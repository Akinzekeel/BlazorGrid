@page "/demos/basic"
@layout DemoLayout
<div class="float-right my-2">
    <div class="form-group">
        <label class="form-switch">
            <input type="checkbox" @bind-value="ShowCode">
            <i class="form-icon"></i> View source
        </label>
    </div>
</div>
<h1>Basic example</h1>
@if (ShowCode)
{
    <pre class="code" data-lang="Razor"><code class="bg-dark text-light">&lt;BlazorGrid TRow=&quot;Employee&quot; SourceUrl=&quot;Data/employees.json&quot;&gt;
    &lt;GridCol FitToContent=&quot;true&quot;&gt;
        &lt;img src=&quot;@@context.Avatar&quot; style=&quot;width: 20px; height: 20px;&quot; /&gt;
    &lt;/GridCol&gt;
    &lt;GridCol Caption=&quot;#&quot; FitToContent=&quot;true&quot;&gt;
        @@context.Id
    &lt;/GridCol&gt;
    &lt;GridCol Caption=&quot;First name&quot;&gt;
        @@context.FirstName
    &lt;/GridCol&gt;
    &lt;GridCol Caption=&quot;Last name&quot;&gt;
        @@context.LastName
    &lt;/GridCol&gt;
    &lt;GridCol Caption=&quot;Email address&quot;&gt;
        &lt;a href=&quot;mailto:@@context.Email&quot;&gt;@@context.Email&lt;/a&gt;
    &lt;/GridCol&gt;
&lt;/BlazorGrid&gt;</code></pre>
}
else
{
    <p>This example shows what the grid looks like with the minimum amount of configuration.</p>
    <p>For the purpose of this demo, all of the data is pulled from a static JSON file. Paging is handled by a custom provider which I wrote just for this demo.</p>

    <div class="mt-2">
        <BlazorGrid TRow="Employee" SourceUrl="Data/employees.json">
            <StaticGridCol FitToContent="true">
                <img src="@context.Avatar" style="width: 20px; height: 20px;" />
            </StaticGridCol>
            <GridCol For="() => context.Id" FitToContent="true" />
            <GridCol For="() => context.FirstName" />
            <GridCol For="() => context.LastName" />
            <GridCol For="() => context.Email">
                <a href="mailto:@context.Email">@context.Email</a>
            </GridCol>
        </BlazorGrid>
    </div>
}
@code
{
    public bool ShowCode { get; set; }
}