@layout DemoLayout
@page "/demos/sorting"
<div class="float-right my-2">
    <div class="form-group">
        <label class="form-switch">
            <input type="checkbox" @bind-value="ShowCode">
            <i class="form-icon"></i> View source
        </label>
    </div>
</div>
<h1>Sorting</h1>
@if (ShowCode)
{
    <pre class="code" data-lang="Razor"><code class="bg-dark text-light">&lt;BlazorGrid TRow=&quot;Employee&quot; SourceUrl=&quot;Data/employees.json&quot;&gt;
    &lt;GridCol FitToContent=&quot;true&quot;&gt;
        &lt;img src=&quot;@@context.Avatar&quot; style=&quot;width: 20px; height: 20px;&quot; /&gt;
    &lt;/GridCol&gt;
    &lt;GridCol Caption=&quot;#&quot; FitToContent=&quot;true&quot; OrderBy=&quot;@@nameof(context.Id)&quot;&gt;
        @@context.Id
    &lt;/GridCol&gt;
    &lt;GridCol Caption=&quot;First name&quot; OrderBy=&quot;@@nameof(context.FirstName)&quot;&gt;
        @@context.FirstName
    &lt;/GridCol&gt;
    &lt;GridCol Caption=&quot;Last name&quot; OrderBy=&quot;@@nameof(context.LastName)&quot;&gt;
        @@context.LastName
    &lt;/GridCol&gt;
    &lt;GridCol Caption=&quot;Email address&quot; OrderBy=&quot;@@nameof(context.Email)&quot;&gt;
        &lt;a href=&quot;mailto:@@context.Email&quot;&gt;@@context.Email&lt;/a&gt;
    &lt;/GridCol&gt;
&lt;/BlazorGrid&gt;</code></pre>
}
else
{
    <p>In this example, some of the columns support sorting. This is achieved by providing the <code>GridCol</code> component with a value for the <code>OrderBy</code> parameter. When any of the header cells is clicked, the value of that parameter is then passed onto the <code>IGridProvider</code> which should return ordered data.</p>
    <p>Apart from this user-definable sorting, you can also provide a default value to the grid by using the parameters <code>DefaultOrderBy</code> and <code>DefaultOrderByDescending</code>.</p>
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Tip</h5>
            <code>BlazorGrid.Abstractions.Extensions</code> contains extension methods for ordering IQueryables only by providing a string. Once you add the namespace, simply call <code>myQuery.OrderBy("someProperty")</code>.
        </div>
    </div>

    <div class="mt-2">
        <BlazorGrid TRow="Employee" SourceUrl="Data/employees.json">
            <StaticGridCol FitToContent="true">
                <img src="@context.Avatar" style="width: 20px; height: 20px;" />
            </StaticGridCol>
            <GridCol For="context.Id" Caption="#" FitToContent="true">
                @context.Id
            </GridCol>
            <GridCol For="context.FirstName" Caption="First name">
                @context.FirstName
            </GridCol>
            <GridCol For="context.LastName" Caption="Last name">
                @context.LastName
            </GridCol>
            <GridCol For="context.Email" Caption="Email address">
                <a href="mailto:@context.Email">@context.Email</a>
            </GridCol>
        </BlazorGrid>
    </div>
}
@code
{
    public bool ShowCode { get; set; }
}