@implements IDisposable
@if (IsOpen)
{
    <div class="modal-backdrop show fade" @onclick="Close"></div>
}
<div class="sidebar @(IsOpen ? "active" : "") sidebar-left">
    <div class="navbar mx-1 pr-1">
        <span class="navbar-brand">Menu</span>
        <a role="button" class="nav-link ml-auto" aria-label="Close" @onclick="Close">
            <i class="fa fa-close"></i>
        </a>
    </div>
    @ChildContent
</div>
@code
{
    [Inject] private NavigationManager Nav { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }

    private bool IsOpen { get; set; }

    public void Toggle()
    {
        IsOpen = !IsOpen;
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        Nav.LocationChanged += LocationChangedHandler;
    }

    private void LocationChangedHandler(object sender, LocationChangedEventArgs args)
    {
        Close();
    }

    private void Close()
    {
        IsOpen = false;
        StateHasChanged();
    }

    public void Dispose()
    {
        Nav.LocationChanged -= LocationChangedHandler;
    }
}