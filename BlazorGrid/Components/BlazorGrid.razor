@typeparam TRow
@using Microsoft.AspNetCore.Components.Web.Virtualization
<CascadingValue Value="this" IsFixed="true">
    @ChildContent(GetEmptyRow())
</CascadingValue>
@if (AreColumnsProcessed && RegisteredColumns.Any())
{
    <div @attributes="FinalAttributes">
        <div class="grid-scrollview" style="grid-template-columns: @GridTemplateColumns(); height: 100%;">
            <header class="grid-row grid-header">
                @foreach (var col in RegisteredColumns)
                {
                    <div @onclick="() => TryApplySortingAsync(col)" class="@col.CssClass">
                        @if (!col.AlignRight)
                        {
                            @col.GetCaptionOrDefault()
                        }
                        @if (IsFilteredBy(col))
                        {
                            <span class="blazor-grid-filter-icon active" />
                        }
                        else
                        {
                            <span class="@col.SortIconCssClass()" />
                        }
                        @if (col.AlignRight)
                        {
                            @col.GetCaptionOrDefault()
                        }
                    </div>
                }
            </header>
            @if (LoadingError != null)
            {
                <div class="grid-row-span-all">
                    <div class="@Config.Styles.PlaceholderWrapperClass">
                        <div class="@Config.Styles.ErrorHeadingClass">
                            <h2>@Resources.LoadingError_Title</h2>
                        </div>
                        <div class="@Config.Styles.ErrorSubHeadingClass">@Resources.LoadingError_Text</div>
                        <small class="@Config.Styles.ErrorTextClass">@LoadingError.Message</small>
                        @if (System.Diagnostics.Debugger.IsAttached)
                        {
                            <code style="line-break: auto">@LoadingError.StackTrace</code>
                        }
                    </div>
                </div>
            }
            else if (TotalRowCount == 0)
            {
                <div class="grid-row-span-all">
                    <div class="@Config.Styles.PlaceholderWrapperClass">
                        <h5 class="@Config.Styles.NoDataHeadingClass">@Resources.Empty_Title</h5>
                        @if (string.IsNullOrEmpty(Query))
                        {
                            <p class="@Config.Styles.NoDataTextClass">@Resources.Empty_Text</p>
                        }
                        else
                        {
                            <p class="@Config.Styles.NoDataTextClass">@Resources.Empty_Text_Filtered</p>
                        }
                    </div>
                </div>
            }
            else
            {
                <Virtualize ItemsProvider="GetItemsVirtualized" @ref="VirtualizeRef">
                    <Placeholder>
                        <div class="grid-row grid-row-placeholder" aria-label="@Resources.Loading_Text">
                            @foreach (var col in RegisteredColumns)
                            {
                                <div>
                                    <span class="grid-cell-placeholder">&#8203;</span>
                                </div>
                            }
                        </div>
                    </Placeholder>
                    <ItemContent>
                        @{
                                    var cls = "grid-row";

                                    if (OnClick.HasDelegate || Href != null)
                                    {
                                        cls += " " + Config.Styles.RowClickableClass;
                                    }
                        }
                        <div class="@cls"
                             @onclick="_ => OnRowClicked(context)">
                            @ChildContent(context)
                        </div>
                    </ItemContent>
                </Virtualize>
                <div style="grid-column: span @RegisteredColumns.Count()">
                    <div class="@Config.Styles.FooterWrapperClass">
                        <div class="@Config.Styles.FooterTextClass">@string.Format(Resources.Footer_RowCount, TotalRowCount ?? 0)</div>
                    </div>
                </div>
            }
        </div>
    </div>
}